-- Drop tables if they exist (for testing purposes)
DROP TABLE IF EXISTS search_preferences, messages, boards, users, favourites CASCADE;

-- Enable PostGIS extension
CREATE EXTENSION IF NOT EXISTS postgis;

-- Create Users table
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    user_password VARCHAR(255) NOT NULL,
    image_url TEXT DEFAULT '/static/images/default-pic.png',
    bio TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO users (id, username, email, user_password)
VALUES (1, 'TestUser', 'testuser@example.com', 'testpassword');

-- Create Boards table 
CREATE TABLE boards (
    board_id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    asking_price DECIMAL,
    board_manufacturer VARCHAR(255),
    board_length_feet INTEGER,
    board_length_inches INTEGER,
    board_length_total INTEGER,
    condition VARCHAR(50),
    sell_or_rent VARCHAR(20),
    board_location_text VARCHAR(255),
    board_location_coordinates VARCHAR(255),
    board_location_spatial GEOMETRY(Point, 4326), 
    delivery_options VARCHAR(50),
    model VARCHAR(255),
    width_integer INTEGER,
    width_fraction VARCHAR(10),
    width_total DECIMAL,
    depth_integer INTEGER,
    depth_fraction VARCHAR(10),
    depth_total DECIMAL,
    volume_litres INTEGER,
    fin_setup VARCHAR(255),
    board_material VARCHAR(255),
    extra_details VARCHAR(255),
    main_photo TEXT,  
    extra_photos JSON,  
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Favourites table
CREATE TABLE favourites (
    user_id INTEGER REFERENCES users(id),
    board_id INTEGER REFERENCES boards(board_id),
    PRIMARY KEY (user_id, board_id)
);

-- Create Messages table
CREATE TABLE messages (
    message_id SERIAL PRIMARY KEY,
    sender_id INTEGER REFERENCES users(id),
    receiver_id INTEGER REFERENCES users(id),
    board_id INTEGER REFERENCES boards(board_id),
    message_content TEXT,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create SearchPreferences table
CREATE TABLE search_preferences (
    search_id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    board_type VARCHAR(255),
    condition VARCHAR(50),
    board_location_text VARCHAR(255),
    board_location_coordinates VARCHAR(255),
    board_location_spatial GEOMETRY(Point, 4326), 
    max_price DECIMAL,
    min_price DECIMAL,
    board_manufacturer VARCHAR(255),
    board_length_feet INTEGER,
    board_length_inches INTEGER,
    min_length INTEGER,
    max_length INTEGER,
    board_length_total INTEGER,
    sell_or_rent VARCHAR(20),
    model VARCHAR(255),
    width_integer INTEGER,
    width_fraction VARCHAR(10),
    min_width DECIMAL,
    max_width DECIMAL,
    width_total DECIMAL,
    depth_integer INTEGER,
    depth_fraction VARCHAR(10),
    min_depth DECIMAL,
    max_depth DECIMAL,
    depth_total DECIMAL,
    volume_litres DECIMAL,
    min_volume INTEGER,
    max_volume INTEGER,
    fin_setup VARCHAR(255),
    board_material VARCHAR(255);
    main_photo TEXT,  
    extra_photos JSON,  
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);